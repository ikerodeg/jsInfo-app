---
import MainLayout from "@/layouts/MainLayout.astro"
import Footer from "@/components/Footer.astro"
import LssnArt from "@/components/LssnArt.astro"
import ChaptrSect from "@/components/ChaptrSect.astro"
import ChaptrSubSect from "@/components/ChaptrSubSect.astro"
---
<MainLayout>
  <LssnArt artClass="lssn__05" h2Title="Otros operadores" slot="mainContent">
    <ChaptrSect h3Title="Resto" codeText="%">
      <ChaptrSubSect h4Title="Explicación y uso" codeText="">
        <p class="chaptrSubSect__p">El resultado de <code>a % b</code> es el resto de la división entera de <code>a ÷ b</code></p>
        <pre class="chaptrSubSect__console wScript">
          console.log(¬5 % ¬2);
          ⋗ 1     /*/º 5 ÷ 2 = 2 y resto 1 º/*/

          console.log(¬8 % ¬2);
          ⋗ 0     /*/º 8 ÷ 2 = 4 y resto 0 º/*/</pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Exponenciación" codeText="**">
      <ChaptrSubSect h4Title="Explicación y uso" codeText="">
        <p class="chaptrSubSect__p">El operador exponenciación <code>a ** b</code> eleva <code>a</code> a la potencia de <code>b</code>. En matemáticas de la escuela, lo escribimos como <code>a<sup>b</sup></code></p>
        <pre class="chaptrSubSect__console wScript">
          console.log(¬2 ** ¬4);
          ⋗ /º 16 º/</pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Asignación y modificación" codeText="+">
      <ChaptrSubSect h4Title="Explicación y uso" codeText="">
        <p class="chaptrSubSect__p">Cuando queremos agregar un valor a una variable que ya contiene uno</p>
        <pre class="chaptrSubSect__console wScript">
          let ·num = ¬4;
          ·num = ·num + ¬2;

          console.log(·num);
          ⋗ 6</pre>
        <p class="chaptrSubSect__p">Esta notación puede ser acortada utilizando los operadores <code>+=</code>, <code>─=</code>, <code>*=</code>, <code>/=</code></p>
        <pre class="chaptrSubSect__console wScript">
          let ·num = ¬4;

          ·num += ¬2;
          console.log(·num);
          ⋗ 6

          ·num *= ¬2;
          console.log(·num);
          ⋗ 12</pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Incremento y decremento" codeText="+">
      <ChaptrSubSect h4Title="Incremento" codeText="++">
        <p class="chaptrSubSect__p">Incrementa el valor de una variable en 1. Sólo puede ser aplicado a variables, no a valores directamente</p>
        <pre class="chaptrSubSect__console wScript">
          let ·counter = ¬4;

          ·counter++;
          console.log(·counter);
          ⋗ 5</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Decremento" codeText="--">
        <p class="chaptrSubSect__p">Decrementa el valor de una variable en 1. Sólo puede ser aplicado a variables, no a valores directamente</p>
        <pre class="chaptrSubSect__console wScript">
          let ·counter = ¬4;

          ·counter--;
          console.log(·counter);
          ⋗ /º 3 º/</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Sufijo vs prefijo" codeText="">
        <p class="chaptrSubSect__p">La forma <span class="bttn">sufijo</span> va <mark>después</mark> de la variable. Primero se devuelve el valor original de la variable y luego se incrementa. Útil cuando necesitas usar el valor actual antes de incrementarlo, como al contar elementos durante un proceso.</p>
        <pre class="chaptrSubSect__console wScript">
          let ·myArr = [¬2, ¬4, ¬6];
          let ·count = ¬0;

          ·myArr.forEach(#elemnt =&gt; &#123;
            if (#elemnt &gt; ¬2)&#123;
              ·count++;
            &#125;
          &#125;);

          console.log(·count);
          ⋗ /º 2 º/</pre>

          <p class="chaptrSubSect__p">La forma <span class="bttn">prefijo</span> va <mark>antes</mark> de la variable. Primero se incrementa el valor original de la variable y luego se imprime. Útil cuando necesitas incrementar primero y usar el valor incrementado inmediatamente, como al generar identificadores únicos</p>
          <pre class="chaptrSubSect__console wScript">
            let ·lastId = ¬0;
  
            function @addItem(•name) &#123;
              let ·id = ++·lastId;
              console.log(`/º Adding item =&gt; id:$&#123;·id&#125; - $&#123;•name&#125; º/`);
              &#125;

            @addItem('Libro');
            ⋗ /º Adding item =&gt; id:1 - Libro º/

            @addItem('Lápiz');
            ⋗ /º Adding item =&gt; id:2 - Lápiz º/</pre>
      </ChaptrSubSect>
    </ChaptrSect>
  </LssnArt>
	<Footer slot="mainFooter" prevPage="/lessons/lesson_04" nextPage="/lessons/lesson_06"/>
</MainLayout>



<!-- 
&lt;&gt;
&#123;&#125;
()&#123;&#125;
﹛﹜    Llaves no estiladas
﹕     2 puntos no estilizados
•parametro
·variable
#variable en Func/if/for
çObjetos
⋗ ∞Resultado
@funcion()
¬numbers
objProperty:
ºobjProperty
/* comentario */
'/º modo texto quita span º/'
<p class="chaptrSubSect__p">
<pre class="chaptrSubSect__console wScript">
<table class="chaptrSubSect__table">
<img class="chaptrSubSect__img" src=`${ruta}img13.webp` alt="captura del evento">
<ul class="chaptrSubSect__ul">
<li class="chaptrSubSectUl__li"></li>
＃
-->