---
import MainLayout from "@/layouts/MainLayout.astro"
import Footer from "@/components/Footer.astro"
import LssnArt from "@/components/LssnArt.astro"
import ChaptrSect from "@/components/ChaptrSect.astro"
import ChaptrSubSect from "@/components/ChaptrSubSect.astro"
---
<MainLayout>
  <LssnArt artClass="lssn__19" h2Title="Set" slot="mainContent">
    <ChaptrSect h3Title="Creación de un Set" codeText="">
      <ChaptrSubSect h4Title="Utilizando su constructor" codeText="new Set()">
        <p class="chaptrSubSect__p">Es una colección de tipo especial: “conjunto de valores” (sin claves), donde cada valor puede aparecer solo una vez y estas son sus características principales</p>
        <ul class="chaptrSubSect__ul">
          <li class="chaptrSubSectUl__li"><b>Valores únicos</b>: No puede contener valores duplicados. Si intentas agregar el mismo valor más de una vez, lo ignorará.</li>
          <li class="chaptrSubSectUl__li"><b>Orden de inserción</b>: Los elementos se mantienen en el orden en que se insertan.</li>
          <li class="chaptrSubSectUl__li"><b>Iterabilidad</b>: Son iterables.</li>
        </ul>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">bagShopSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">()</span>;

          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">bagShopSET</span>)</span>;
          <span class="result">Set(0) &#123;size: 0&#125;</span></pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Agregar elementos" codeText="">
      <ChaptrSubSect h4Title="Utilizando su constructor" codeText="new Set()">
        <p class="chaptrSubSect__p">Cuando lo estamos creando podemos pasarle también unos valores iniciales</p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;

          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span>)</span>;
          <span class="result">Set(5) &#123;1, 3, 5, 7, 11&#125;</span></pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Utilizando el método" codeText=".add()">
        <p class="chaptrSubSect__p">Cómo argumento le pasaremos valores</p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">()</span>;
          
          <span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">1</span>)</span>;
          <span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">3</span>)</span>;
          <span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">5</span>)</span>;
          <span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">7</span>)</span>;
          <span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">11</span>)</span>;

          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span>)</span>;
          <span class="result">Set(5) &#123;1, 3, 5, 7, 11&#125;</pre>
          <p class="chaptrSubSect__p">Podemos usar el encadenamiento para añadir varios valores a la vez</p>
          <pre class="chaptrSubSect__console">
            <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">()</span>;
            
            <span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">1</span>)</span>
                            <span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">3</span>)</span>
                            <span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">5</span>)</span>
                            <span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">7</span>)</span>
                            <span class="dot">.</span><span class="meth">add</span><span class="warp">(<span class="nums">11</span>)</span>;
  
            <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span>)</span>;
            <span class="result">Set(5) &#123;1, 3, 5, 7, 11&#125;</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Array como argumento a" codeText="new Set()">
        <p class="chaptrSubSect__p">Podemos pasar un array valores al constructor <code>new Set()</code></p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">primeNumARR</span> <span class="opera">=</span> <span class="warp">[<span class="nums">1, 3, 5, 7, 11</span>]</span>;

          <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="obj">primeNumARR</span>)</span>;

          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span>)</span>;
          <span class="result">Set(5) &#123;1, 3, 5, 7, 11&#125;</span></pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="String como argumento a" codeText="new Set()">
        <p class="chaptrSubSect__p">Podemos pasar un string al constructor <code>new Set()</code></p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">sonNameSTR</span> <span class="opera">=</span> <span class="args">'Éderr'</span>;  <span class="commnt">A propósito la r</span>

          <span class="key">const</span> <span class="var">sonNameSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="obj">sonNameSTR</span>)</span>;

          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">sonNameSET</span>)</span>;
          <span class="result">Set(5) &#123;'É', 'd', 'e', 'r'&#125;</span>
          <span class="commnt">Set elimina valores duplicados (r)</span></pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Existencia valores" codeText="">
      <ChaptrSubSect h4Title="Verifica si existe una clave con" codeText=".has()">
          <p class="chaptrSubSect__p">Devuelve un booleano</p>
          <pre class="chaptrSubSect__console">
            <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;
  
            <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">has</span><span class="warp">(<span class="nums">7</span>)</span>)</span>;
            <span class="result">true</span></pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Eliminar elementos" codeText="">
      <ChaptrSubSect h4Title="Elimina elemento con clave con" codeText=".delete()">
          <p class="chaptrSubSect__p">Devuelve <code>true</code> si el valor existía y fue eliminado, o <code>false</code> si el valor no estaba</p>
          <pre class="chaptrSubSect__console">
            <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;

            <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">delete</span><span class="warp">(<span class="nums">7</span>)</span>)</span>;
            <span class="result">true</span>
  
            <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span>)</span>)</span>;
            <span class="result">Set(4) &#123;1, 3, 5, 11&#125;</span></pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Vaciar el Set" codeText="">
      <ChaptrSubSect h4Title="Vacia completamente con" codeText=".clear()">
          <p class="chaptrSubSect__p">Vacia completamente el <code>Set</code> de elementos</p>
          <pre class="chaptrSubSect__console">
            <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;

            <span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">clear</span><span class="warp">()</span>;
  
            <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span>)</span>)</span>;
            <span class="result">Set(0) &#123;size: 0&#125;</span></pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Verificar tamaño" codeText="">
      <ChaptrSubSect h4Title="El método" codeText="size">
        <p class="chaptrSubSect__p">Aunque al hacer un <code>console.log()</code> lo primero que nos muestra la consola es la palabra <code>Set</code> seguido de entre paréntesis el tamaño de este</p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;

          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">size</span>)</span>)</span>;
          <span class="result">5</span></pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Iterando un Set" codeText="">
      <ChaptrSubSect h4Title="Devolviendo un" codeText="iterator">
        <p class="chaptrSubSect__p">Podemos usar el método <code>.values()</code> directamente sobre el <code>Set()</code> para iterarlo. El método <code>.keys()</code>, es un <mark>alias</mark> por lo que dará el mismo resultado, y <code>.entries()</code> retorna un iterador de pares [valor, valor] sólo por compatibilidad de la <span class="bttn">API</span></p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;

          <span class="commnt">Usando .values()</span>
          <span class="key">const</span> <span class="var">primeNumITE</span> <span class="opera">=</span> <span class="var">primeNumSET</span><span class="dot">.</span><span class="meth">values</span><span class="warp">()</span>;
          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumITE</span>)</span>;
          <span class="result">SetIterator &#123;1, 3, 5, 7, 9&#125;</span>
        
          <span class="commnt">Usando .entries()</span>
          <span class="key">const</span> <span class="var">primeNumITE</span> <span class="opera">=</span> <span class="var">primeNumSET</span><span class="dot">.</span><span class="meth">entries</span><span class="warp">()</span>;
          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumITE</span>)</span>;
          <span class="result">SetIterator &#123;1 =&gt; 1, 3 =&gt; 3, 5 =&gt; 5, 7 =&gt; 7, 9 =&gt; 9&#125;</span></pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="El bucle" codeText="for..of">
        <p class="chaptrSubSect__p">Devuelve los valores del <code>Set</code></p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;
          
          <span class="func">for</span><span class="warp">(<span class="key">let</span> <span class="params">num</span> <span class="key">of</span> <span class="obj">primeNumSET</span>) &#123;
            <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="params">num</span>)</span>;
          &#125;</span>
          <span class="result">1 3 5 7 11</span></pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Usando directamente" codeText=".forEach()">
        <p class="chaptrSubSect__p">Devuelve los valores del <code>Set</code></p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;
          
          <span class="obj">primeNumSET</span><span class="dot">.</span><span class="meth">forEach</span><span class="warp">(<span class="warp2">(<span class="params">num</span>) <span class="opera">=&gt;</span> &#123;
            <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="params">num</span>)</span>;
          &#125;</span>)</span>;
          <span class="result">1 3 5 7 11</span></pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Conversiones" codeText="">
      <ChaptrSubSect h4Title="De Set a Array con" codeText="Array.from()">
        <p class="chaptrSubSect__p">Usando el método <code>Array.from()</code></p>
        <pre class="chaptrSubSect__console">
          <span class="key">const</span> <span class="var">primeNumSET</span> <span class="opera">=</span> <span class="key">new</span> <span class="func">Set</span><span class="warp">(<span class="warp2">[<span class="nums">1, 3, 5, 7, 11</span>]</span>)</span>;

          <span class="key">const</span> <span class="var">primeNumARR</span> <span class="opera">=</span> <span class="obj">Array</span><span class="dot">.</span><span class="meth">from</span><span class="warp">(<span class="obj">primeNumSET</span>)</span>;

          <span class="obj">console</span><span class="dot">.</span><span class="meth">log</span><span class="warp">(<span class="obj">primeNumARR</span>)</span>;
          <span class="result">[1, 3, 5, 7, 11]</span></pre>
      </ChaptrSubSect>
    </ChaptrSect>
  </LssnArt>
	<Footer slot="mainFooter" />
</MainLayout>