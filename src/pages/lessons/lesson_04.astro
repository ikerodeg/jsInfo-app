---
import MainLayout from "@/layouts/MainLayout.astro"
import Footer from "@/components/Footer.astro"
import LssnArt from "@/components/LssnArt.astro"
import ChaptrSect from "@/components/ChaptrSect.astro"
import ChaptrSubSect from "@/components/ChaptrSubSect.astro"
---
<MainLayout>
  <LssnArt artClass="lssn__04" h2Title="Conversión de tipos" slot="mainContent">
    <ChaptrSect h3Title="Conversión a" codeText="String">
      <ChaptrSubSect h4Title="Usando el operador unario" codeText="+">
        <p class="chaptrSubSect__p">Si uno de los operandos es una cadena de texto, JavaScript convertirá automáticamente el otro operando a una cadena de texto</p>
        <pre class="chaptrSubSect__console wScript">
          let ·result = '2' + ¬4;

          console.log(·result);
          ⋗ /º '24' º/     /*/º Lo concatena º/*/</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Usando la función" codeText="String()">
        <p class="chaptrSubSect__p">Lo convierte todo</p>
        <pre class="chaptrSubSect__console wScript">
          let ·result = @String(¬2+¬4);

          console.log(·result);
          ⋗ /º '6' º/     /* Suma y convierte a String */</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Usando el método" codeText="toString()">
        <p class="chaptrSubSect__p">Da error al convertir <code>null</code></p>
        <pre class="chaptrSubSect__console wScript">
          let ·num = ¬6;
          let ·result = ·num.toString();

          console.log(·result);
          ⋗ /º '6' º/     /* Convierte a String */</pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Conversión a" codeText="Number">
      <ChaptrSubSect h4Title="Con operadores" codeText="-, /, *">
        <p class="chaptrSubSect__p">De <code>String</code> a <code>Number</code></p>
        <pre class="chaptrSubSect__console wScript">
          let ·result = '4' - '2';
          console.log(·result);
          ⋗ 2

          let ·result = '4' - ¬2;
          console.log(·result);
          ⋗ 2

          let ·result = '4' * ¬2;
          console.log(·result);
          ⋗ 8

          let ·result = '4' / ¬2;
          console.log(·result);
          ⋗ 2</pre>

          <p class="chaptrSubSect__p">De <code>Boolean</code> a <code>Number</code></p>
          <pre class="chaptrSubSect__console wScript">
            let ·result = '4' - true;
            console.log(·result);
            ⋗ 3     /* /º true = 1 º/ */
  
            let ·result = '4' - false;
            console.log(·result);
            ⋗ 4     /* /º false = 0 º/ */
  
            let ·result = '4' * true;
            console.log(·result);
            ⋗ 4
  
            let ·result = '4' / true;
            console.log(·result);
            ⋗ 4</pre>

            <p class="chaptrSubSect__p">De <code>null</code> a <code>Number</code></p>
            <pre class="chaptrSubSect__console wScript">
              let ·result = '4' - null;
              console.log(·result);
              ⋗ 4     /*/º null = 0 º/*/
    
              let ·result = '4' * null;
              console.log(·result);
              ⋗ 0
    
              let ·result = '4' / null;
              console.log(·result);
              ⋗ /º Infinity º/</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Usando la función" codeText="Number()">
        <p class="chaptrSubSect__p">Las cadenas vacías y los valores <code>null</code> al convertirlos a <code>Number</code> devuelven: <code>0</code>. Si una cadena es un número inválido, el resultado será <code>NaN</code></p>
        <pre class="chaptrSubSect__console wScript">
          let ·result = @Number('324');
          console.log(·result);
          ⋗ 324

          let ·result = @Number(true);
          console.log(·result);
          ⋗ 1</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Usando la función" codeText="parseInt()">
        <p class="chaptrSubSect__p">Lee el número desde un string hasta que dejan de poder hacerlo. Cuando se topa con un error devuelve el número que haya registrado hasta ese momento. La función <code>parseInt()</code> devuelve un entero</p>
        <pre class="chaptrSubSect__console wScript">
          console.log(parseInt('100px'));
          ⋗ 100

          console.log(parseInt('/º 12.3 º/'));
          ⋗ 12</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Usando la función" codeText="parseFloat()">
        <p class="chaptrSubSect__p">Devuelve un número con su decimal hasta que pueda dejar de leer</p>
        <pre class="chaptrSubSect__console wScript">
          console.log(parseFloat('/º 12.5em º/'));
          ⋗ /º 12.5 º/

          console.log(parseFloat('/º 12.3.4 º/'));
          ⋗ /º 12.3 º/</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Con el operador unario" codeText="+">
        <p class="chaptrSubSect__p">Forma sencilla y rápida. Se coloca antes de un valor o expresión</p>
        <pre class="chaptrSubSect__console wScript">
          let ·num = +'42';
          console.log(·num);
          ⋗ 42

          let ·num = +null;
          console.log(·num);
          ⋗ 0

          let ·num = +true;
          console.log(·num);
          ⋗ 1</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Con la función" codeText="Math.floor()">
        <p class="chaptrSubSect__p">Aunque <mark>no es recomendable</mark>, si se puede convertir directamente. Devuelve un número entero redondeado hacia abajo</p>
        <pre class="chaptrSubSect__console wScript">
          let ·strNum = '/º 12.7 º/';
          console.log(Math.floor(·strNum));
          ⋗ 12</pre>
      </ChaptrSubSect>
      <ChaptrSubSect h4Title="Con la función" codeText="Math.ceil()">
        <p class="chaptrSubSect__p">Aunque <mark>no es recomendable</mark>, si se puede convertir directamente. Devuelve un número entero redondeado hacia arriba</p>
        <pre class="chaptrSubSect__console wScript">
          let ·strNum = ' /º 12.7 º/';
          console.log(Math.ceil(·strNum));
          ⋗ 13</pre>
      </ChaptrSubSect>
    </ChaptrSect>
    <ChaptrSect h3Title="Conversión a" codeText="Boolean">
      <ChaptrSubSect h4Title="Con la función" codeText="Boolean()">
        <p class="chaptrSubSect__p">En JavaScript, <code>undefined</code>, <code>null</code>, <code>0</code>, <code>NaN</code> y <code>''</code> se convierten a <code>false</code></p>
        <pre class="chaptrSubSect__console wScript">
          let ·result = Boolean('');
          console.log(·result);
          ⋗ /º false º/

          let ·result = Boolean(NaN);
          console.log(·result);
          ⋗ /º false º/</pre>
      </ChaptrSubSect>
    </ChaptrSect>
  </LssnArt>
	<Footer slot="mainFooter" prevPage="/lessons/lesson_03" nextPage="/lessons/lesson_05"/>
</MainLayout>



<!-- 
&lt;&gt;
&#123;&#125;
()&#123;&#125;
﹛﹜    Llaves no estiladas
﹕     2 puntos no estilizados
•parametro
·variable
#variable en Func/if/for
çObjetos
⋗ ∞Resultado
@funcion()
¬numbers
objProperty:
ºobjProperty
/* comentario */
'/º modo texto quita span º/'
<p class="chaptrSubSect__p">
<pre class="chaptrSubSect__console wScript">
<table class="chaptrSubSect__table">
<img class="chaptrSubSect__img" src=`${ruta}img13.webp` alt="captura del evento">
<ul class="chaptrSubSect__ul">
<li class="chaptrSubSectUl__li"></li>
＃
-->